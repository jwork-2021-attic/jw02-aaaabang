@startuml

interface Sorter {
    load()
    sort()
    getPlan()
}

class BubbleSorter {
    int[] a
    swap()
}

class QuickSorter
{
    int[] a
    swap()
    quickSort()
    partition()
}
class Matrix{
    Position[] positions

    put()
    get()
    toArray()
}

class Position {
    Linable linable
    Position()
    setLinable()
}

interface Linable {
    class Position

    setPosition() 
    getPosition()
    getValue()
    swapPosition()
}

class Monster {
    int r
    int g
    int b
    int rank
    Position position

    setMonster()
}

class Snake {
    Sorter sorter

    getTheSnake()
    Snake()
    setSorter()
    MatrixUp()
    parsePlan()

    getMonsterByRank()
    execute()
}



BubbleSorter ..|> Sorter
QuickSorter ..|> Sorter

Snake -- Sorter
Snake .. Matrix
Snake .. Position

Monster ..|> Linable
Monster -- Position

Matrix *-- Position
Linable --o Position

@enduml
